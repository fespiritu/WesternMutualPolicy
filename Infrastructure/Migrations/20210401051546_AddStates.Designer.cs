// <auto-generated />
using System;
using Infrastructure.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Infrastructure.Migrations
{
    [DbContext(typeof(WMPolicyContext))]
    [Migration("20210401051546_AddStates")]
    partial class AddStates
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.4")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Core.Entities.Coverage", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("Cost")
                        .HasColumnType("decimal(19,4)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("Id");

                    b.ToTable("Coverages");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Cost = 10m,
                            Description = "Coverage1"
                        },
                        new
                        {
                            Id = 2,
                            Cost = 20m,
                            Description = "Coverage2"
                        },
                        new
                        {
                            Id = 3,
                            Cost = 30m,
                            Description = "Coverage3"
                        },
                        new
                        {
                            Id = 4,
                            Cost = 40m,
                            Description = "Coverage4"
                        },
                        new
                        {
                            Id = 5,
                            Cost = 50m,
                            Description = "Coverage5"
                        });
                });

            modelBuilder.Entity("Core.Entities.CoverageAreaLimit", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CoverageId")
                        .HasColumnType("int");

                    b.Property<int?>("StatesId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CoverageId");

                    b.HasIndex("StatesId");

                    b.ToTable("CoverageAreaLimits");
                });

            modelBuilder.Entity("Core.Entities.Insured", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<int?>("PolicyId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PolicyId");

                    b.ToTable("Insureds");
                });

            modelBuilder.Entity("Core.Entities.Policy", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("PropertyId")
                        .HasColumnType("int");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("PropertyId");

                    b.ToTable("Policies");
                });

            modelBuilder.Entity("Core.Entities.PolicyCoverage", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CoverageId")
                        .HasColumnType("int");

                    b.Property<int?>("PolicyId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CoverageId");

                    b.HasIndex("PolicyId");

                    b.ToTable("PolicyCoverages");
                });

            modelBuilder.Entity("Core.Entities.Property", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address1")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Address2")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("State")
                        .IsRequired()
                        .HasMaxLength(2)
                        .HasColumnType("nvarchar(2)");

                    b.Property<decimal>("Value")
                        .HasColumnType("decimal(19,4)");

                    b.Property<string>("ZipCode")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.HasKey("Id");

                    b.ToTable("Properties");
                });

            modelBuilder.Entity("Core.Entities.States", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("State")
                        .IsRequired()
                        .HasMaxLength(2)
                        .HasColumnType("nvarchar(2)");

                    b.HasKey("Id");

                    b.ToTable("StatesDb");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "Arizona",
                            State = "AZ"
                        },
                        new
                        {
                            Id = 2,
                            Description = "California",
                            State = "CA"
                        },
                        new
                        {
                            Id = 3,
                            Description = "New York",
                            State = "NY"
                        });
                });

            modelBuilder.Entity("Core.Entities.CoverageAreaLimit", b =>
                {
                    b.HasOne("Core.Entities.Coverage", "Coverage")
                        .WithMany()
                        .HasForeignKey("CoverageId");

                    b.HasOne("Core.Entities.States", "States")
                        .WithMany()
                        .HasForeignKey("StatesId");

                    b.Navigation("Coverage");

                    b.Navigation("States");
                });

            modelBuilder.Entity("Core.Entities.Insured", b =>
                {
                    b.HasOne("Core.Entities.Policy", "Policy")
                        .WithMany()
                        .HasForeignKey("PolicyId");

                    b.Navigation("Policy");
                });

            modelBuilder.Entity("Core.Entities.Policy", b =>
                {
                    b.HasOne("Core.Entities.Property", "Property")
                        .WithMany()
                        .HasForeignKey("PropertyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Property");
                });

            modelBuilder.Entity("Core.Entities.PolicyCoverage", b =>
                {
                    b.HasOne("Core.Entities.Coverage", "Coverage")
                        .WithMany()
                        .HasForeignKey("CoverageId");

                    b.HasOne("Core.Entities.Policy", "Policy")
                        .WithMany()
                        .HasForeignKey("PolicyId");

                    b.Navigation("Coverage");

                    b.Navigation("Policy");
                });
#pragma warning restore 612, 618
        }
    }
}
